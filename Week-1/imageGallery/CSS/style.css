body {
    margin: 20px;
    padding: 0;
    text-align: center;
}

.container {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    /*create 6 colums with same fraction*/
    grid-auto-rows: 100px 300px;
    /*first row is 100px second row is 300px it will repeat like that*/
    grid-gap: 10px;
    grid-auto-flow: dense;
}

.gallery-item {
    width: 100%;
    height: 100%;
    position: relative;
}

.gallery-item .image {
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.gallery-item .image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* each of the images automaticly resize itself width and height/should be resized to fit its container.*/
    object-position: 50% 50%;
    /* property is used together with object-fit to specify how img should be positioned with x/y coordinates inside its "own content box". instead of default top left*/
    cursor: pointer;
    /*mouse point arrow chaanges to pointer */
    transition: .5s ease-in-out;
}

.gallery-item:hover .image img {
    transform: scale(1.5);
    /*it will zoom to image when you hover it*/
}

.gallery-item .text {
    /* all label positioned top left */
    opacity: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 25px;
    pointer-events: none;
    /*when mouse goes over text it wont change to pointer*/
    z-index: 4;
    /*property specifies the stack order of an element. text will be front of the img*/
    transition: .3 ease-in-out;
}

.gallery-item:hover .text {
    opacity: 1;
    /*when we hover img we will see text*/
    animation: text-box .3s linear;
    padding: 1em;
    width: 100%;
    -webkit-backdrop-filter: blur(5px) saturate(1.8);
    backdrop-filter: blur(5px) saturate(1.8);
    /*blur to background img*/
}

.w-1 {
    grid-column: span 1;
}

.w-2 {
    grid-column: span 2;
}

.w-3 {
    grid-column: span 3;
    /* it will span this column and cover 3 column property. it is very useful to rearrange grid box*/
}

.w-4 {
    grid-column: span 4;
}

.w-5 {
    grid-column: span 5;
}

.w-6 {
    grid-column: span 6;
}

.h-1 {
    grid-row: span 1;
    /*t will span this row and cover 3 rows property*/
}

.h-2 {
    grid-row: span 2;
}

.h-3 {
    grid-row: span 3;
}

.h-4 {
    grid-row: span 4;
}

.h-5 {
    grid-row: span 5;
}

.h-6 {
    grid-row: span 6;
}

@media screen and (max-width:500px) {
    .container {
        grid-template-columns: repeat(2, 1fr);
        /* when you resize the browser it will keep till 2 img to display when it hits 500px*/
    }
    .w-1,
    .w-2,
    .w-3,
    .w-4,
    .w-5,
    .w-6 {
        grid-column: span 1;
        /* group span will be 1 no matter how big is your span when it is in 500px */
    }
}

@keyframes text-box {
    /*text will go down from top*/
    0% {
        top: 10%;
    }
    50% {
        top: 35%;
    }
    100% {
        top: 50%;
    }
}